{"version":3,"sources":["components/PeopleList.js","components/PhoneBookFilter.js","components/PhonebookForm.js","components/Notification.js","services/persons.js","index.js"],"names":["Person","person","removeHandler","name","number","onClick","PeopleList","persons","map","key","PhoneBookFilter","handleFilter","filterValue","value","onChange","PhonebookForm","props","onSubmit","handleSubmit","newName","handleNameChange","required","newNumber","handleNumberChange","type","Notification","message","notificationType","className","baseUrl","axios","get","then","response","data","newPerson","post","id","updatedPerson","put","url","delete","App","useState","setPersons","setNewName","setNewNumber","setFilterValue","notifyMessage","setNotifyMessage","notifyType","setNotifyType","personsToShow","filterBy","useEffect","personsService","showNotification","timeout","setTimeout","regExp","RegExp","filter","test","e","target","cleanup","preventDefault","replace","find","window","confirm","catch","err","allPersont","handlePersonUpdate","addedPerson","concat","error","alert","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cc72cba.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({person, removeHandler}) => {\r\n  return (<div>{person.name} - {person.number} <button onClick={() => removeHandler(person)}>delete</button></div>);\r\n}\r\n\r\nconst PeopleList = ({persons, removeHandler}) => (\r\n  persons.map(person => (<Person key={person.name} person={person} removeHandler={removeHandler}/>))\r\n);\r\n\r\nexport default PeopleList;","import React from \"react\";\r\n\r\nconst PhoneBookFilter = ({handleFilter, filterValue}) => {\r\n\r\n    return (\r\n        <div>Filter shown with: <input value={filterValue} onChange={handleFilter} /></div>\r\n    );\r\n};\r\n\r\nexport default PhoneBookFilter;","import React from \"react\"\r\n\r\nconst PhonebookForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNameChange} required />\r\n        </div>\r\n        <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} required /></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default PhonebookForm;","import React from \"react\";\r\n\r\nconst Notification = ({message, notificationType}) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={notificationType}>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    return axios\r\n        .get(baseUrl)\r\n            .then(response => response.data);\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    return axios\r\n            .post(baseUrl, newPerson)\r\n                .then(response => response.data);\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n    return axios\r\n            .put(`${baseUrl}/${id}`, updatedPerson)\r\n                .then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n    const url = `${baseUrl}/${id}`;\r\n    return axios\r\n            .delete(url);\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PeopleList from \"./components/PeopleList\";\r\nimport PhoneBookFilter from \"./components/PhoneBookFilter\";\r\nimport PhonebookForm from \"./components/PhonebookForm\";\r\nimport Notification from \"./components/Notification\";\r\nimport personsService from \"./services/persons\";\r\nimport \"./style.css\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const [notifyMessage, setNotifyMessage] = useState(null);\r\n  const [notifyType, setNotifyType] = useState(\"info\");\r\n\r\n  let personsToShow = filterValue ?\r\n                      filterBy(filterValue) :\r\n                      persons;\r\n  \r\n  // fetch data on startup\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n        .then(persons => {\r\n          setPersons(persons);\r\n        })\r\n  }, []);\r\n  \r\n  // Show a notification message of a given time for some time\r\n  const showNotification = (message, type, timeout) => {\r\n    setNotifyType(type);\r\n    setNotifyMessage(message);\r\n    setTimeout(() => {\r\n      setNotifyMessage(null);\r\n    }, timeout);\r\n  }\r\n\r\n  // controlled input + filter value\r\n  const handleFilter = (e) => {\r\n    const value = e.target.value;\r\n    setFilterValue(value);\r\n    filterBy(value);\r\n  }\r\n\r\n  function filterBy(value) {\r\n    // pattern for matching the filtered value\r\n    const regExp = new RegExp(`.*${value}.*`, \"i\");\r\n    // return a new array with only filtered people\r\n    const filteredList = persons.filter((person) => {\r\n      return regExp.test(person.name);\r\n    });\r\n    return filteredList;\r\n  }\r\n\r\n                      \r\n  const validatePerson = (name) => {\r\n    return !persons.find(person => person.name === name)\r\n  }\r\n\r\n  const validateNumber = (number) => {\r\n    const regExp = /^\\+?\\d*\\(?\\d+\\)?[\\d-\\s]+$/gi;\r\n    return regExp.test(number);\r\n  }\r\n\r\n  const sanitizeNumber = (number) => {\r\n    const regExp = /[^\\d+]/gi;\r\n    return newNumber.replace(regExp, \"\");\r\n  }\r\n\r\n  const handlePersonRemove = (person) => {\r\n    const answer = window.confirm(`Remove ${person.name}?`);\r\n    if (answer) {\r\n      personsService\r\n        .remove(person.id)\r\n          .then(() => {\r\n            showNotification(`${person.name} was removed`, \"info\", 3000);\r\n            setPersons(persons.filter(p => p.id !== person.id));\r\n          })\r\n          .catch(err => {\r\n            // Show error notification and remove the person from the list on client\r\n            showNotification(`Error deleting person - ${person.name} [${err.message}]`, \"error\", 5000);\r\n            personsService.getAll().then(allPersont => setPersons(allPersont));\r\n          });\r\n    }\r\n  }\r\n\r\n  const handlePersonUpdate = (id, newPerson) => {\r\n    personsService\r\n      .update(id, newPerson)\r\n        .then(updatedPerson => {\r\n          showNotification(`${newPerson.name} successfully updated`, \"info\", 3000);\r\n          setPersons(persons.map(person => person.id === id ? updatedPerson : person));\r\n        })\r\n        .catch(err => {\r\n          showNotification(`Unable to update person: ${err.message}`, \"error\", 5000);\r\n          personsService.getAll().then(allPersont => setPersons(allPersont));\r\n        })\r\n  }\r\n\r\n  const handlePersonAdd = (e) => {\r\n    function cleanup() {\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n      setFilterValue(\"\");\r\n    }\r\n\r\n    e.preventDefault();\r\n    \r\n    // do nothing if the input is empty\r\n    if (!newName) return;\r\n    \r\n    let newPerson = {\r\n      name: newName,\r\n      number: sanitizeNumber(newNumber)\r\n    };\r\n\r\n    if (!validatePerson(newName)) {\r\n      if (window.confirm(`${newName} is already in the list. Replace the old number with a new one?`)) {\r\n        const currentPerson = persons.find(person => person.name === newName);\r\n        handlePersonUpdate(currentPerson.id, newPerson);\r\n        cleanup();\r\n      }\r\n      return;\r\n    }\r\n    if (!validateNumber(newNumber)) {\r\n      alert(`${newNumber} is not valid.`);\r\n      return;\r\n    }\r\n    personsService\r\n      .create(newPerson)\r\n        .then(addedPerson => {\r\n          showNotification(`${addedPerson.name} was successfully added`, \"info\", 3000);\r\n          setPersons(persons.concat(addedPerson));\r\n          cleanup();\r\n        })\r\n        .catch(err => {\r\n          // console.log(err.response);\r\n          showNotification(err.response.data.error, \"error\", 5000);\r\n        })\r\n  }\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  const handleNumberChange = (e) => {\r\n    setNewNumber(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification message={notifyMessage} notificationType={notifyType}/>\r\n\r\n      <PhoneBookFilter handleFilter={handleFilter} filterValue={filterValue}/>\r\n\r\n      <h2>Add new:</h2>\r\n\r\n      <PhonebookForm newName={newName} \r\n                     handleNameChange={handleNameChange} \r\n                     newNumber={newNumber} \r\n                     handleNumberChange={handleNumberChange} \r\n                     handleSubmit={handlePersonAdd} \r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      \r\n      <PeopleList persons={personsToShow} removeHandler={handlePersonRemove}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}